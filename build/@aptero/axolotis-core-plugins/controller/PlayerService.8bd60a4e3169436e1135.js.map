{"version":3,"file":"@aptero/axolotis-core-plugins/controller/PlayerService.8bd60a4e3169436e1135.js","mappings":";;;;;;;;;;;kNAMO,MAAMA,EACQ,oBAACC,GAClB,OAAO,IAAIC,GAcR,MAAMA,EAAmC,c,YACtB,M,EADsB,Y,EAAA,M,sFAG9CC,UACE,OAAOD,EAAcE,KAGvBC,cAAcC,GACZ,GAAIC,KAAKD,OACP,MAAM,IAAIE,MAEZD,KAAKD,OAASA,EAGhBG,mBACE,IAAKF,KAAKD,OACR,MAAM,IAAIE,MAEZ,OAAOD,KAAKD","sources":["webpack://axolotis-core-plugins/./src/lib/modules/controller/PlayerService.ts"],"sourcesContent":["import { Component } from \"@aptero/axolotis-player\";\r\nimport * as THREE from \"three\";\r\nimport { WebpackLazyModule } from \"@root/lib/generated/webpack/WebpackLoader\";\r\nimport { LazyServices } from \"@aptero/axolotis-player\";\r\nimport { Service } from \"@aptero/axolotis-player\";\r\n\r\nexport class Factory implements WebpackLazyModule, Service<PlayerService> {\r\n  async createService(services: LazyServices): Promise<PlayerService> {\r\n    return new PlayerService();\r\n  }\r\n}\r\n\r\nexport interface Player {\r\n  declareNavMesh(navMesh: THREE.Mesh);\r\n  askFlyMode();\r\n  teleportToLocation(x: number, y: number, z: number);\r\n  getHeadPosition(targetCopy: THREE.Vector3): void;\r\n}\r\n\r\n/**\r\n * Should be loosly coupled since multiple implementation of player will be behind that.\r\n */\r\nexport class PlayerService implements Component {\r\n  player: Player | null = null;\r\n\r\n  getType(): string {\r\n    return PlayerService.name;\r\n  }\r\n\r\n  declarePlayer(player: Player) {\r\n    if (this.player) {\r\n      throw new Error();\r\n    }\r\n    this.player = player;\r\n  }\r\n\r\n  getCurrentPlayer(): Player {\r\n    if (!this.player) {\r\n      throw new Error();\r\n    }\r\n    return this.player;\r\n  }\r\n}\r\n"],"names":["Factory","services","PlayerService","getType","name","declarePlayer","player","this","Error","getCurrentPlayer"],"sourceRoot":""}