{"version":3,"file":"@aptero/axolotis-core-plugins/controller/pathFindingPlayer/Input.638f4c88007bbe096135.js","mappings":";;;;;;;;;;;kUAKO,MAAMA,EAGXC,cAAc,sEAyCAC,IACZC,KAAKC,QAAQF,EAAMG,MAAQ,KA1Cf,mBA6CFH,IACVC,KAAKC,QAAQF,EAAMG,MAAQ,KA7C3BF,KAAKC,QAAU,GACfD,KAAKG,OAAS,GAEdH,KAAKI,kBAAkBJ,KAAKK,YAC5BL,KAAKM,gBAAgBN,KAAKO,UAG5BC,UACE,OAAOX,EAAMY,KAGfC,iBAAiBC,EAASC,EAAMC,GAC9BF,EAAQG,iBAAiBF,EAAMC,GAC/Bb,KAAKG,OAAOY,KAAK,CAAEJ,QAAAA,EAASC,KAAAA,EAAMC,SAAAA,IAGpCT,kBAAkBS,GAChBb,KAAKU,iBAAiBM,SAAU,UAAWH,GAG7CP,gBAAgBO,GACdb,KAAKU,iBAAiBM,SAAU,QAASH,GAG3CI,oBAAoBJ,GAClBb,KAAKU,iBAAiBM,SAAU,YAAaH,GAG/CK,gBAAgBL,GACdb,KAAKU,iBAAiBM,SAASG,KAAM,QAASN,GAGhDO,oBAAoBP,GAClBb,KAAKU,iBAAiBM,SAASG,KAAM,YAAaN,GAGpDQ,kBAAkBR,GAChBb,KAAKU,iBAAiBM,SAASG,KAAM,UAAWN,GAWlDS,WAAWpB,GACT,YAA8BqB,IAAvBvB,KAAKC,QAAQC,GAAsB,EAAIF,KAAKC,QAAQC,GAG7DsB,qBACExB,KAAKG,OAAOsB,SAASC,IACnBA,EAAEf,QAAQgB,oBAAoBD,EAAEd,KAAMc,EAAEb,aAG1Cb,KAAKG,OAAS,GACdH,KAAKI,kBAAkBJ,KAAKK,YAC5BL,KAAKM,gBAAgBN,KAAKO,WAIvB,MAAMqB,EACQ,oBAACC,GAClB,OAAO,IAAIhC","sources":["webpack://axolotis-core-plugins/./src/lib/modules/controller/pathFindingPlayer/Input.ts"],"sourcesContent":["import { Component } from \"@aptero/axolotis-player\";\r\nimport { WebpackLazyModule } from \"@root/lib/generated/webpack/WebpackLoader\";\r\nimport { Service } from \"@aptero/axolotis-player\";\r\nimport { LazyServices } from \"@aptero/axolotis-player\";\r\n\r\nexport class Input implements Component {\r\n  private _keyMap: any;\r\n  private events: any[];\r\n  constructor() {\r\n    this._keyMap = {};\r\n    this.events = [];\r\n\r\n    this.AddKeyDownListner(this._onKeyDown);\r\n    this.AddKeyUpListner(this._onKeyUp);\r\n  }\r\n\r\n  getType(): string {\r\n    return Input.name;\r\n  }\r\n\r\n  _addEventListner(element, type, callback) {\r\n    element.addEventListener(type, callback);\r\n    this.events.push({ element, type, callback });\r\n  }\r\n\r\n  AddKeyDownListner(callback) {\r\n    this._addEventListner(document, \"keydown\", callback);\r\n  }\r\n\r\n  AddKeyUpListner(callback) {\r\n    this._addEventListner(document, \"keyup\", callback);\r\n  }\r\n\r\n  AddMouseMoveListner(callback) {\r\n    this._addEventListner(document, \"mousemove\", callback);\r\n  }\r\n\r\n  AddClickListner(callback) {\r\n    this._addEventListner(document.body, \"click\", callback);\r\n  }\r\n\r\n  AddMouseDownListner(callback) {\r\n    this._addEventListner(document.body, \"mousedown\", callback);\r\n  }\r\n\r\n  AddMouseUpListner(callback) {\r\n    this._addEventListner(document.body, \"mouseup\", callback);\r\n  }\r\n\r\n  _onKeyDown = (event) => {\r\n    this._keyMap[event.code] = 1;\r\n  };\r\n\r\n  _onKeyUp = (event) => {\r\n    this._keyMap[event.code] = 0;\r\n  };\r\n\r\n  GetKeyDown(code) {\r\n    return this._keyMap[code] === undefined ? 0 : this._keyMap[code];\r\n  }\r\n\r\n  ClearEventListners() {\r\n    this.events.forEach((e) => {\r\n      e.element.removeEventListener(e.type, e.callback);\r\n    });\r\n\r\n    this.events = [];\r\n    this.AddKeyDownListner(this._onKeyDown);\r\n    this.AddKeyUpListner(this._onKeyUp);\r\n  }\r\n}\r\n\r\nexport class Factory implements WebpackLazyModule, Service<Input> {\r\n  async createService(services: LazyServices): Promise<Input> {\r\n    return new Input();\r\n  }\r\n}\r\n"],"names":["Input","constructor","event","this","_keyMap","code","events","AddKeyDownListner","_onKeyDown","AddKeyUpListner","_onKeyUp","getType","name","_addEventListner","element","type","callback","addEventListener","push","document","AddMouseMoveListner","AddClickListner","body","AddMouseDownListner","AddMouseUpListner","GetKeyDown","undefined","ClearEventListners","forEach","e","removeEventListener","Factory","services"],"sourceRoot":""}