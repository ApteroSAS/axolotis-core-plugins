/*!
 * 
 *   @aptero/axolotis-core-plugins v1.0.0
 *   https://github.com/ApteroSAS/axolotis-player
 *
 *   Copyright (c) Aptero (https://github.com/ApteroSAS/axolotis-player) and project contributors.
 *
 *   This source code is licensed under the MIT license found in the
 *   LICENSE file in the root directory of this source tree.
 *
 */
"use strict";(self.webpackChunkaxolotis_core_plugins=self.webpackChunkaxolotis_core_plugins||[]).push([[452],{950:function(e,i,n){function t(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}n.r(i),n.d(i,{Factory:function(){return c},ThreeLib:function(){return d},asyncLoadThree:function(){return o},getGlobalRenderer:function(){return s}});const r=new class{constructor(){t(this,"loaderCache",{}),t(this,"assets",{})}async getLoader(e,i){return this.loaderCache[e]||(this.loaderCache[e]=await i()),this.loaderCache[e]}};function a(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}async function o(){return await n.e(796).then(n.bind(n,212))}async function s(){var e;if(null===(e=window.axolotis)||void 0===e||!e.renderer){const e=await o();let i=new e.WebGLRenderer({antialias:!0});i.setSize(window.innerWidth,window.innerHeight),i.toneMapping=e.ACESFilmicToneMapping,i.toneMappingExposure=1,i.outputEncoding=e.sRGBEncoding,i.setPixelRatio(window.devicePixelRatio),document.body.appendChild(i.domElement),window.axolotis||(window.axolotis={}),window.axolotis.renderer=i}return window.axolotis.renderer}class d{constructor(e,i,n){this.frameLoop=e,this.worldService=i,this.THREE=n,a(this,"renderer",void 0),a(this,"scene",void 0),a(this,"camera",void 0),a(this,"preRenderPass",[])}async init(){this.scene=new this.THREE.Scene,this.renderer=await s(),this.camera=new this.THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.001,1e5),this.camera.position.z=2;const e=()=>{for(const e of this.preRenderPass)e();this.renderer.render(this.scene,this.camera),this.renderer.autoClear=!0},i=()=>{this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight),e()};this.worldService.addOnWorldChangeCallback((()=>{window.removeEventListener("resize",i),this.frameLoop.removeLoop(d.name),this.worldService.isActiveWorld()&&(window.addEventListener("resize",i,!1),this.frameLoop.addLoop(d.name,e))}),!0)}async loadAssets(e){if(r.assets[e])return r.assets[e];if(e.endsWith(".glb")){const i=await r.getLoader("GLTFLoader",(async()=>new((await Promise.all([n.e(796),n.e(404)]).then(n.bind(n,217))).GLTFLoader))),t=await i.loadAsync(e);r.assets[e]=t}if(e.endsWith(".jpg")){const i=await r.getLoader("TextureLoader",(async()=>new this.THREE.TextureLoader)),n=await i.loadAsync(e);r.assets[e]=n}return r.assets[e]}getType(){return d.name}}class c{constructor(){}async createService(e){let i=await e.getService("@aptero/axolotis-core-plugins/frame/FrameLoop"),n=await e.getService("@aptero/axolotis-core-plugins/worlds/WorldService");const t=new d(i,n,await o());return await t.init(),t}}}}]);
//# sourceMappingURL=ThreeLib.c9c637b7d52e43126546.js.map