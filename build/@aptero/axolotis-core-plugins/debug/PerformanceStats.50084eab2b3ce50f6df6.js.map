{"version":3,"file":"@aptero/axolotis-core-plugins/debug/PerformanceStats.50084eab2b3ce50f6df6.js","mappings":"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","sources":["webpack://axolotis-core-plugins/./src/lib/modules/debug/PerformanceStats.ts","webpack://axolotis-core-plugins/./node_modules/three/examples/jsm/libs/stats.module.js"],"sourcesContent":["import { Service } from \"@aptero/axolotis-player\";\r\nimport { Component } from \"@aptero/axolotis-player\";\r\nimport Stats from \"three/examples/jsm/libs/stats.module\";\r\nimport { WebpackLazyModule } from \"@root/lib/generated/webpack/WebpackLoader\";\r\nimport { LazyServices, Services } from \"@aptero/axolotis-player\";\r\ndeclare const window: any;\r\n\r\nexport class Factory implements WebpackLazyModule, Service<PerformanceStats> {\r\n  async createService(services: LazyServices): Promise<PerformanceStats> {\r\n    return new PerformanceStats();\r\n  }\r\n}\r\n\r\nexport class PerformanceStats implements Component {\r\n  constructor() {\r\n    if (window.perfStatSingletonPresent) {\r\n      return; //Only one debug panel even if multiple world\r\n    }\r\n    window.perfStatSingletonPresent = true;\r\n    console.warn(\r\n      \"MB MBytes of allocated memory. (Run Chrome with --enable-precise-memory-info) to have precise perf info\"\r\n    );\r\n    const stats = Stats();\r\n    stats.showPanel(2);\r\n    document.body.appendChild(stats.dom);\r\n    const animate = (t) => {\r\n      //Avoir using frameloop for this so it does not appear on perf\r\n      requestAnimationFrame(animate);\r\n      stats.update();\r\n    };\r\n    requestAnimationFrame(animate);\r\n  }\r\n\r\n  getType(): string {\r\n    return PerformanceStats.name;\r\n  }\r\n}\r\n","var Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time >= prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport default Stats;\n"],"names":["Factory","services","PerformanceStats","constructor","window","perfStatSingletonPresent","console","warn","stats","Stats","showPanel","document","body","appendChild","dom","animate","t","requestAnimationFrame","update","getType","name","mode","container","createElement","addPanel","panel","id","i","children","length","style","display","cssText","addEventListener","event","preventDefault","beginTime","performance","Date","now","prevTime","frames","fpsPanel","Panel","msPanel","self","memory","memPanel","REVISION","begin","end","time","usedJSHeapSize","jsHeapSizeLimit","this","domElement","setMode","fg","bg","min","Infinity","max","round","Math","PR","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","canvas","width","height","context","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","value","maxValue","drawImage"],"sourceRoot":""}