/*!
 * 
 *   @aptero/axolotis-core-plugins v1.0.0
 *   https://github.com/ApteroSAS/axolotis-player
 *
 *   Copyright (c) Aptero (https://github.com/ApteroSAS/axolotis-player) and project contributors.
 *
 *   This source code is licensed under the MIT license found in the
 *   LICENSE file in the root directory of this source tree.
 *
 */
"use strict";(self.webpackChunkaxolotis_core_plugins=self.webpackChunkaxolotis_core_plugins||[]).push([["@aptero/axolotis-core-plugins/modules/portals/PortalsService"],{"./src/lib/modules/portals/PortalsService.ts":
/*!***************************************************!*\
  !*** ./src/lib/modules/portals/PortalsService.ts ***!
  \***************************************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Factory": function() { return /* binding */ Factory; },\n/* harmony export */   "PortalsService": function() { return /* binding */ PortalsService; }\n/* harmony export */ });\n/* harmony import */ var _aptero_axolotis_player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aptero/axolotis-player */ "../axolotis-player/build/index.js");\n/* harmony import */ var _aptero_axolotis_player__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aptero_axolotis_player__WEBPACK_IMPORTED_MODULE_0__);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass Factory {\n  constructor() {}\n\n  async createService(services) {\n    const worldService = await services.getService("@aptero/axolotis-player/modules/core/WorldService");\n    const actualWorldService = await worldService.getActiveWorld().getFirstComponentByType(_aptero_axolotis_player__WEBPACK_IMPORTED_MODULE_0__.ServiceEntity.name);\n    const codeLoader = await actualWorldService.getService("@aptero/axolotis-player/modules/core/loader/CodeLoaderService");\n    const frameLoop = await services.getService("@aptero/axolotis-player/modules/FrameLoop");\n    const three = await services.getService("@aptero/axolotis-core-plugins/modules/three/ThreeLib");\n    let initialRoomUrl = "initial";\n\n    try {\n      initialRoomUrl = window.location.href;\n    } catch (e) {\n      /* ignore*/\n    }\n\n    return new PortalsService(worldService, frameLoop, three, initialRoomUrl);\n  }\n\n}\nconst worlds = {};\nclass PortalsService {\n  constructor(services, frameLoop, three, roomUrl) {\n    this.services = services;\n    this.three = three;\n\n    _defineProperty(this, "i", 0);\n\n    _defineProperty(this, "portalsLoops", []);\n\n    _defineProperty(this, "portalsRenderLoops", []);\n\n    this.notifylWorld(roomUrl, services.getActiveWorld());\n    frameLoop.addLoop(PortalsService.name, delta => {\n      for (const loop of this.portalsLoops) {\n        loop(delta);\n      }\n    });\n    this.three.preRenderPass.push(() => {\n      this.render();\n    });\n  }\n\n  render() {\n    const gl = this.three.renderer.getContext(); // clear buffers now: color, depth, stencil\n\n    this.three.renderer.clear(true, true, true); // do not clear buffers before each render pass\n\n    this.three.renderer.autoClear = false;\n\n    for (const loop of this.portalsRenderLoops) {\n      loop();\n    }\n\n    gl.colorMask(true, true, true, true);\n    gl.depthMask(true);\n  }\n\n  getType() {\n    return PortalsService.name;\n  }\n\n  cleanUpRoomUrl(roomUrl) {\n    roomUrl.replace("./", "");\n\n    if (!roomUrl.startsWith("http")) {\n      roomUrl = window.location.origin + "/" + roomUrl;\n    }\n\n    return new URL(roomUrl).toString();\n  }\n\n  notifylWorld(url, world) {\n    url = this.cleanUpRoomUrl(url);\n\n    if (!worlds[url]) {\n      worlds[url] = world;\n    }\n  }\n\n  getWorld(url) {\n    url = this.cleanUpRoomUrl(url);\n    return worlds[url];\n  }\n\n  worldExist(url) {\n    return !!this.getWorld(url);\n  }\n\n  addPortalLoop(callback) {\n    this.portalsLoops.push(callback);\n  }\n\n  addPortalRenderLoop(callback) {\n    this.portalsRenderLoops.push(callback);\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/modules/portals/PortalsService.ts\n')}}]);