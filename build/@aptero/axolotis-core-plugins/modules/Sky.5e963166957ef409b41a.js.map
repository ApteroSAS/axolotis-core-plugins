{"version":3,"file":"@aptero/axolotis-core-plugins/modules/Sky.5e963166957ef409b41a.js","mappings":";;;;;;;;;;;0VAYO,MAAMA,EACU,sBAACC,EAAoBC,GACxC,IAAIC,EAAWF,EAAMG,wBACnBC,EAAAA,cAAAA,MAEEC,QAAcH,EAASI,WACzB,wDAEEC,EAAM,IAAIC,EAEd,aADMD,EAAIE,WAAWJ,EAAOJ,EAAOS,QAC5BH,GAII,MAAMC,EAGnBG,cAAc,gDAEdC,UACE,MAAO,MAGO,iBAACP,EAAiBK,GAChCG,KAAKC,MAAQT,EAAMS,MACnBD,KAAKE,cAAgBV,EAAMW,WAAWN,GACtC,MAAMO,EAAY,IAAIC,EAAAA,gBAAsB,SAAU,UAAW,GACjED,EAAUE,MAAMC,OAAO,GAAK,EAAG,IAC/BH,EAAUI,YAAYD,OAAO,KAAO,EAAG,KACvCP,KAAKC,MAAMQ,IAAIL,GAEf,MAAMM,EAAS,IAAIL,EAAAA,eAAqB,IAAM,GAAI,IAC5CM,EAAS,IAAIN,EAAAA,kBAAwB,CACzCO,IAAKZ,KAAKE,QACVW,KAAMR,EAAAA,SACNS,YAAY,EACZC,YAAY,IAERrB,EAAM,IAAIW,EAAAA,KAAWK,EAAQC,GACnCjB,EAAIsB,QAAQX,EAAAA,UAAAA,UAA0B,KACtCL,KAAKC,MAAMQ,IAAIf","sources":["webpack://axolotis-core-plugins/./src/lib/modules/Sky.ts"],"sourcesContent":["import * as THREE from \"three\";\r\n//import { ComponentFactory,WorldEntity,WebpackLazyModule,ServiceEntity,Component} from \"@aptero/axolotis-player\";\r\n\r\nimport { ServiceEntity } from \"@aptero/axolotis-player\";\r\nimport Component from \"@aptero/axolotis-player/build/types/modules/core/ecs/Component\";\r\nimport { WebpackLazyModule } from \"@aptero/axolotis-player/build/types/modules/core/loader/WebpackLoader\";\r\nimport { ComponentFactory } from \"@aptero/axolotis-player/build/types/modules/core/ecs/ComponentFactory\";\r\nimport { WorldEntity } from \"@aptero/axolotis-player/build/types/modules/core/ecs/WorldEntity\";\r\n//import { ServiceEntity } from \"@aptero/axolotis-player/build/types/modules/core/service/ServiceEntity\";\r\n\r\nimport { ThreeLib } from \"@root/lib/modules/three/ThreeLib\";\r\n\r\nexport class Factory implements WebpackLazyModule, ComponentFactory<Sky> {\r\n  async createComponent(world: WorldEntity, config: any): Promise<Sky> {\r\n    let services = world.getFirstComponentByType<ServiceEntity>(\r\n      ServiceEntity.name\r\n    );\r\n    let three = await services.getService<ThreeLib>(\r\n      \"@aptero/axolotis-core-plugins/modules/three/ThreeLib\"\r\n    );\r\n    let sky = new Sky();\r\n    await sky.initialize(three, config.skymap); //\"assets/static/demo2/sky.jpg\"\r\n    return sky;\r\n  }\r\n}\r\n\r\nexport default class Sky implements Component {\r\n  private scene: any;\r\n  private texture: any;\r\n  constructor() {}\r\n\r\n  getType(): string {\r\n    return \"Sky\";\r\n  }\r\n\r\n  async initialize(three: ThreeLib, skymap: string) {\r\n    this.scene = three.scene;\r\n    this.texture = await three.loadAssets(skymap);\r\n    const hemiLight = new THREE.HemisphereLight(0xffffff, 0xfffffff, 1);\r\n    hemiLight.color.setHSL(0.6, 1, 0.6);\r\n    hemiLight.groundColor.setHSL(0.095, 1, 0.75);\r\n    this.scene.add(hemiLight);\r\n\r\n    const skyGeo = new THREE.SphereGeometry(1000, 25, 25);\r\n    const skyMat = new THREE.MeshBasicMaterial({\r\n      map: this.texture,\r\n      side: THREE.BackSide,\r\n      depthWrite: false,\r\n      toneMapped: false,\r\n    });\r\n    const sky = new THREE.Mesh(skyGeo, skyMat);\r\n    sky.rotateY(THREE.MathUtils.degToRad(-60));\r\n    this.scene.add(sky);\r\n  }\r\n}\r\n"],"names":["Factory","world","config","services","getFirstComponentByType","ServiceEntity","three","getService","sky","Sky","initialize","skymap","constructor","getType","this","scene","texture","loadAssets","hemiLight","THREE","color","setHSL","groundColor","add","skyGeo","skyMat","map","side","depthWrite","toneMapped","rotateY"],"sourceRoot":""}