/*!
 * 
 *   @aptero/axolotis-core-plugins v1.0.0
 *   https://github.com/ApteroSAS/axolotis-player
 *
 *   Copyright (c) Aptero (https://github.com/ApteroSAS/axolotis-player) and project contributors.
 *
 *   This source code is licensed under the MIT license found in the
 *   LICENSE file in the root directory of this source tree.
 *
 */
"use strict";(self.webpackChunkaxolotis_core_plugins=self.webpackChunkaxolotis_core_plugins||[]).push([["@aptero/axolotis-core-plugins/modules/three/ThreeLib"],{"./src/lib/modules/three/ThreeAssetsLoader.ts":
/*!****************************************************!*\
  !*** ./src/lib/modules/three/ThreeAssetsLoader.ts ***!
  \****************************************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "AssetsLoader": function() { return /* binding */ AssetsLoader; },\n/* harmony export */   "assetsLoader": function() { return /* binding */ assetsLoader; }\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass AssetsLoader {\n  constructor() {\n    _defineProperty(this, "loaderCache", {});\n\n    _defineProperty(this, "assets", {});\n  }\n\n  async getLoader(loaderName, loaderLoader) {\n    if (!this.loaderCache[loaderName]) {\n      this.loaderCache[loaderName] = await loaderLoader();\n    }\n\n    return this.loaderCache[loaderName];\n  }\n\n}\nconst assetsLoader = new AssetsLoader();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL21vZHVsZXMvdGhyZWUvVGhyZWVBc3NldHNMb2FkZXIudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPLE1BQU1BLFlBQU4sQ0FBbUI7QUFBQTtBQUFBLHlDQUNWLEVBRFU7O0FBQUEsb0NBRWYsRUFGZTtBQUFBOztBQUlULFFBQVRDLFNBQVMsQ0FBQ0MsVUFBRCxFQUFxQkMsWUFBckIsRUFBK0M7QUFDNUQsUUFBSSxDQUFDLEtBQUtDLFdBQUwsQ0FBaUJGLFVBQWpCLENBQUwsRUFBbUM7QUFDakMsV0FBS0UsV0FBTCxDQUFpQkYsVUFBakIsSUFBK0IsTUFBTUMsWUFBWSxFQUFqRDtBQUNEOztBQUNELFdBQU8sS0FBS0MsV0FBTCxDQUFpQkYsVUFBakIsQ0FBUDtBQUNEOztBQVR1QjtBQVluQixNQUFNRyxZQUEwQixHQUFHLElBQUlMLFlBQUosRUFBbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9heG9sb3Rpcy1jb3JlLXBsdWdpbnMvLi9zcmMvbGliL21vZHVsZXMvdGhyZWUvVGhyZWVBc3NldHNMb2FkZXIudHM/YzcyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQXNzZXRzTG9hZGVyIHtcbiAgbG9hZGVyQ2FjaGUgPSB7fTtcbiAgYXNzZXRzID0ge307XG5cbiAgYXN5bmMgZ2V0TG9hZGVyKGxvYWRlck5hbWU6IHN0cmluZywgbG9hZGVyTG9hZGVyOiAoKSA9PiB2b2lkKSB7XG4gICAgaWYgKCF0aGlzLmxvYWRlckNhY2hlW2xvYWRlck5hbWVdKSB7XG4gICAgICB0aGlzLmxvYWRlckNhY2hlW2xvYWRlck5hbWVdID0gYXdhaXQgbG9hZGVyTG9hZGVyKCk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmxvYWRlckNhY2hlW2xvYWRlck5hbWVdO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCBhc3NldHNMb2FkZXI6IEFzc2V0c0xvYWRlciA9IG5ldyBBc3NldHNMb2FkZXIoKTtcbiJdLCJuYW1lcyI6WyJBc3NldHNMb2FkZXIiLCJnZXRMb2FkZXIiLCJsb2FkZXJOYW1lIiwibG9hZGVyTG9hZGVyIiwibG9hZGVyQ2FjaGUiLCJhc3NldHNMb2FkZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/lib/modules/three/ThreeAssetsLoader.ts\n')},"./src/lib/modules/three/ThreeLib.ts":
/*!*******************************************!*\
  !*** ./src/lib/modules/three/ThreeLib.ts ***!
  \*******************************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Factory": function() { return /* binding */ Factory; },\n/* harmony export */   "ThreeLib": function() { return /* binding */ ThreeLib; },\n/* harmony export */   "asyncLoadThree": function() { return /* binding */ asyncLoadThree; },\n/* harmony export */   "getGlobalRenderer": function() { return /* binding */ getGlobalRenderer; }\n/* harmony export */ });\n/* harmony import */ var _root_lib_modules_three_ThreeAssetsLoader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @root/lib/modules/three/ThreeAssetsLoader */ "./src/lib/modules/three/ThreeAssetsLoader.ts");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nasync function asyncLoadThree() {\n  //this async import has the only usage of renamin any import to three (using webpack chunk)\n  const THREE = await __webpack_require__.e(/*! import() | @aptero/axolotis-core-plugins/three */ "@aptero/axolotis-core-plugins/three").then(__webpack_require__.bind(__webpack_require__, /*! three */ "./node_modules/three/build/three.module.js"));\n  return THREE;\n}\nasync function getGlobalRenderer() {\n  var _window$axolotis;\n\n  if (!((_window$axolotis = window.axolotis) !== null && _window$axolotis !== void 0 && _window$axolotis.renderer)) {\n    const THREE = await asyncLoadThree();\n    let renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\n    renderer.toneMappingExposure = 1;\n    renderer.outputEncoding = THREE.sRGBEncoding;\n    renderer.setPixelRatio(window.devicePixelRatio);\n    document.body.appendChild(renderer.domElement);\n\n    if (!window.axolotis) {\n      window.axolotis = {};\n    }\n\n    window.axolotis.renderer = renderer;\n  }\n\n  return window.axolotis.renderer;\n}\nclass ThreeLib {\n  constructor(frameLoop, worldService, THREE) {\n    this.frameLoop = frameLoop;\n    this.worldService = worldService;\n    this.THREE = THREE;\n\n    _defineProperty(this, "renderer", void 0);\n\n    _defineProperty(this, "scene", void 0);\n\n    _defineProperty(this, "camera", void 0);\n\n    _defineProperty(this, "preRenderPass", []);\n  }\n\n  async init() {\n    this.scene = new this.THREE.Scene();\n    this.renderer = await getGlobalRenderer();\n    this.camera = new this.THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.001, 100000);\n    this.camera.position.z = 2;\n\n    const render = () => {\n      for (const prerender of this.preRenderPass) {\n        prerender();\n      } // FINAL PASS\n\n\n      this.renderer.render(this.scene, this.camera); // set things back to normal\n\n      this.renderer.autoClear = true;\n    };\n\n    const onWindowResize = () => {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      render();\n    };\n\n    this.worldService.addOnWorldChangeCallback(() => {\n      window.removeEventListener("resize", onWindowResize);\n      this.frameLoop.removeLoop(ThreeLib.name);\n\n      if (this.worldService.isActiveWorld()) {\n        window.addEventListener("resize", onWindowResize, false);\n        this.frameLoop.addLoop(ThreeLib.name, render);\n      }\n    }, true);\n  }\n\n  async loadAssets(path) {\n    if (_root_lib_modules_three_ThreeAssetsLoader__WEBPACK_IMPORTED_MODULE_0__.assetsLoader.assets[path]) {\n      return _root_lib_modules_three_ThreeAssetsLoader__WEBPACK_IMPORTED_MODULE_0__.assetsLoader.assets[path];\n    }\n    /*\n    TODO createa a early start download of assets so that the GLB start downloading early in the waterfall\n    Not as simple as it seems may be doable using service worker\n    fetch(path);//start download of assets\n    var oReq = new XMLHttpRequest();\n    oReq.addEventListener("load", ()=>{});\n    oReq.open("GET", path);\n    oReq.send();\n    */\n\n\n    if (path.endsWith(".glb")) {\n      const loader = await _root_lib_modules_three_ThreeAssetsLoader__WEBPACK_IMPORTED_MODULE_0__.assetsLoader.getLoader("GLTFLoader", async () => {\n        const module = await Promise.all(/*! import() | @aptero/axolotis-core-plugins/three/examples/jsm/loaders/GLTFLoader */[__webpack_require__.e("@aptero/axolotis-core-plugins/three"), __webpack_require__.e("@aptero/axolotis-core-plugins/three/examples/jsm/loaders/GLTFLoader")]).then(__webpack_require__.bind(__webpack_require__, /*! three/examples/jsm/loaders/GLTFLoader */ "./node_modules/three/examples/jsm/loaders/GLTFLoader.js"));\n        const gltfLoader = new module.GLTFLoader(); //const gltfLoader = new GLTFLoader(new this.THREE.LoadingManager());\n\n        return gltfLoader;\n      });\n      const result = await loader.loadAsync(path);\n      _root_lib_modules_three_ThreeAssetsLoader__WEBPACK_IMPORTED_MODULE_0__.assetsLoader.assets[path] = result;\n    }\n\n    if (path.endsWith(".jpg")) {\n      const loader = await _root_lib_modules_three_ThreeAssetsLoader__WEBPACK_IMPORTED_MODULE_0__.assetsLoader.getLoader("TextureLoader", async () => {\n        const texLoader = new this.THREE.TextureLoader();\n        return texLoader;\n      });\n      const result = await loader.loadAsync(path);\n      _root_lib_modules_three_ThreeAssetsLoader__WEBPACK_IMPORTED_MODULE_0__.assetsLoader.assets[path] = result;\n    }\n\n    return _root_lib_modules_three_ThreeAssetsLoader__WEBPACK_IMPORTED_MODULE_0__.assetsLoader.assets[path];\n  }\n\n  getType() {\n    return ThreeLib.name;\n  }\n\n}\nclass Factory {\n  constructor() {}\n\n  async createService(services) {\n    let frameLoop = await services.getService("@aptero/axolotis-player/modules/FrameLoop");\n    let worldService = await services.getService("@aptero/axolotis-player/modules/core/WorldService");\n    const threeLib = new ThreeLib(frameLoop, worldService, await asyncLoadThree());\n    await threeLib.init();\n    return threeLib;\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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eG9sb3Rpcy1jb3JlLXBsdWdpbnMvLi9zcmMvbGliL21vZHVsZXMvdGhyZWUvVGhyZWVMaWIudHM/ZDVlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NldHNMb2FkZXIgfSBmcm9tIFwiQHJvb3QvbGliL21vZHVsZXMvdGhyZWUvVGhyZWVBc3NldHNMb2FkZXJcIjtcbmltcG9ydCBDb21wb25lbnQgZnJvbSBcIkBhcHRlcm8vYXhvbG90aXMtcGxheWVyL2J1aWxkL3R5cGVzL21vZHVsZXMvY29yZS9lY3MvQ29tcG9uZW50XCI7XG5pbXBvcnQgeyBXZWJwYWNrTGF6eU1vZHVsZSB9IGZyb20gXCJAYXB0ZXJvL2F4b2xvdGlzLXBsYXllci9idWlsZC90eXBlcy9tb2R1bGVzL2NvcmUvbG9hZGVyL1dlYnBhY2tMb2FkZXJcIjtcbmltcG9ydCB7XG4gIEZyYW1lTG9vcCxcbiAgTGF6eVNlcnZpY2VzLFxuICBXb3JsZFNlcnZpY2UsXG59IGZyb20gXCJAYXB0ZXJvL2F4b2xvdGlzLXBsYXllci9idWlsZC90eXBlc1wiO1xuaW1wb3J0IHsgU2VydmljZSB9IGZyb20gXCJAYXB0ZXJvL2F4b2xvdGlzLXBsYXllci9idWlsZC90eXBlcy9tb2R1bGVzL2NvcmUvc2VydmljZS9MYXp5U2VydmljZXNcIjtcbmltcG9ydCB7IFBlcnNwZWN0aXZlQ2FtZXJhLCBTY2VuZSwgV2ViR0xSZW5kZXJlciB9IGZyb20gXCJ0aHJlZVwiO1xuXG5kZWNsYXJlIGxldCB3aW5kb3c6IGFueTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFzeW5jTG9hZFRocmVlKCkge1xuICAvL3RoaXMgYXN5bmMgaW1wb3J0IGhhcyB0aGUgb25seSB1c2FnZSBvZiByZW5hbWluIGFueSBpbXBvcnQgdG8gdGhyZWUgKHVzaW5nIHdlYnBhY2sgY2h1bmspXG4gIGNvbnN0IFRIUkVFOiBhbnkgPSBhd2FpdCBpbXBvcnQoXG4gICAgLyogIHdlYnBhY2tQcmVmZXRjaDogMCwgIHdlYnBhY2tNb2RlOiAnbGF6eScsICB3ZWJwYWNrQ2h1bmtOYW1lOiBcIkBhcHRlcm8vYXhvbG90aXMtY29yZS1wbHVnaW5zL3RocmVlXCIgICovXG4gICAgXCJ0aHJlZVwiXG4gICk7XG4gIHJldHVybiBUSFJFRTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEdsb2JhbFJlbmRlcmVyKCkge1xuICBpZiAoIXdpbmRvdy5heG9sb3Rpcz8ucmVuZGVyZXIpIHtcbiAgICBjb25zdCBUSFJFRSA9IGF3YWl0IGFzeW5jTG9hZFRocmVlKCk7XG4gICAgbGV0IHJlbmRlcmVyID0gbmV3IFRIUkVFLldlYkdMUmVuZGVyZXIoeyBhbnRpYWxpYXM6IHRydWUgfSk7XG4gICAgcmVuZGVyZXIuc2V0U2l6ZSh3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0KTtcblxuICAgIHJlbmRlcmVyLnRvbmVNYXBwaW5nID0gVEhSRUUuQUNFU0ZpbG1pY1RvbmVNYXBwaW5nO1xuICAgIHJlbmRlcmVyLnRvbmVNYXBwaW5nRXhwb3N1cmUgPSAxO1xuICAgIHJlbmRlcmVyLm91dHB1dEVuY29kaW5nID0gVEhSRUUuc1JHQkVuY29kaW5nO1xuICAgIHJlbmRlcmVyLnNldFBpeGVsUmF0aW8od2luZG93LmRldmljZVBpeGVsUmF0aW8pO1xuXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChyZW5kZXJlci5kb21FbGVtZW50KTtcbiAgICBpZiAoIXdpbmRvdy5heG9sb3Rpcykge1xuICAgICAgd2luZG93LmF4b2xvdGlzID0ge307XG4gICAgfVxuICAgIHdpbmRvdy5heG9sb3Rpcy5yZW5kZXJlciA9IHJlbmRlcmVyO1xuICB9XG4gIHJldHVybiB3aW5kb3cuYXhvbG90aXMucmVuZGVyZXI7XG59XG5cbmV4cG9ydCBjbGFzcyBUaHJlZUxpYiBpbXBsZW1lbnRzIENvbXBvbmVudCB7XG4gIHJlbmRlcmVyOiBXZWJHTFJlbmRlcmVyO1xuICBzY2VuZTogU2NlbmU7XG4gIGNhbWVyYTogUGVyc3BlY3RpdmVDYW1lcmE7XG4gIHByZVJlbmRlclBhc3M6ICgoKSA9PiB2b2lkKVtdID0gW107XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBmcmFtZUxvb3A6IEZyYW1lTG9vcCxcbiAgICBwcml2YXRlIHdvcmxkU2VydmljZTogV29ybGRTZXJ2aWNlLFxuICAgIHByaXZhdGUgVEhSRUVcbiAgKSB7fVxuXG4gIGFzeW5jIGluaXQoKSB7XG4gICAgdGhpcy5zY2VuZSA9IG5ldyB0aGlzLlRIUkVFLlNjZW5lKCk7XG5cbiAgICB0aGlzLnJlbmRlcmVyID0gYXdhaXQgZ2V0R2xvYmFsUmVuZGVyZXIoKTtcblxuICAgIHRoaXMuY2FtZXJhID0gbmV3IHRoaXMuVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEoXG4gICAgICA3NSxcbiAgICAgIHdpbmRvdy5pbm5lcldpZHRoIC8gd2luZG93LmlubmVySGVpZ2h0LFxuICAgICAgMC4wMDEsXG4gICAgICAxMDAwMDBcbiAgICApO1xuICAgIHRoaXMuY2FtZXJhLnBvc2l0aW9uLnogPSAyO1xuXG4gICAgY29uc3QgcmVuZGVyID0gKCkgPT4ge1xuICAgICAgZm9yIChjb25zdCBwcmVyZW5kZXIgb2YgdGhpcy5wcmVSZW5kZXJQYXNzKSB7XG4gICAgICAgIHByZXJlbmRlcigpO1xuICAgICAgfVxuICAgICAgLy8gRklOQUwgUEFTU1xuICAgICAgdGhpcy5yZW5kZXJlci5yZW5kZXIodGhpcy5zY2VuZSwgdGhpcy5jYW1lcmEpO1xuICAgICAgLy8gc2V0IHRoaW5ncyBiYWNrIHRvIG5vcm1hbFxuICAgICAgdGhpcy5yZW5kZXJlci5hdXRvQ2xlYXIgPSB0cnVlO1xuICAgIH07XG5cbiAgICBjb25zdCBvbldpbmRvd1Jlc2l6ZSA9ICgpID0+IHtcbiAgICAgIHRoaXMuY2FtZXJhLmFzcGVjdCA9IHdpbmRvdy5pbm5lcldpZHRoIC8gd2luZG93LmlubmVySGVpZ2h0O1xuICAgICAgdGhpcy5jYW1lcmEudXBkYXRlUHJvamVjdGlvbk1hdHJpeCgpO1xuICAgICAgdGhpcy5yZW5kZXJlci5zZXRTaXplKHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQpO1xuICAgICAgcmVuZGVyKCk7XG4gICAgfTtcblxuICAgIHRoaXMud29ybGRTZXJ2aWNlLmFkZE9uV29ybGRDaGFuZ2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCBvbldpbmRvd1Jlc2l6ZSk7XG4gICAgICB0aGlzLmZyYW1lTG9vcC5yZW1vdmVMb29wKFRocmVlTGliLm5hbWUpO1xuICAgICAgaWYgKHRoaXMud29ybGRTZXJ2aWNlLmlzQWN0aXZlV29ybGQoKSkge1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCBvbldpbmRvd1Jlc2l6ZSwgZmFsc2UpO1xuICAgICAgICB0aGlzLmZyYW1lTG9vcC5hZGRMb29wKFRocmVlTGliLm5hbWUsIHJlbmRlcik7XG4gICAgICB9XG4gICAgfSwgdHJ1ZSk7XG4gIH1cblxuICBhc3luYyBsb2FkQXNzZXRzKHBhdGg6IHN0cmluZykge1xuICAgIGlmIChhc3NldHNMb2FkZXIuYXNzZXRzW3BhdGhdKSB7XG4gICAgICByZXR1cm4gYXNzZXRzTG9hZGVyLmFzc2V0c1twYXRoXTtcbiAgICB9XG4gICAgLypcbiAgICBUT0RPIGNyZWF0ZWEgYSBlYXJseSBzdGFydCBkb3dubG9hZCBvZiBhc3NldHMgc28gdGhhdCB0aGUgR0xCIHN0YXJ0IGRvd25sb2FkaW5nIGVhcmx5IGluIHRoZSB3YXRlcmZhbGxcbiAgICBOb3QgYXMgc2ltcGxlIGFzIGl0IHNlZW1zIG1heSBiZSBkb2FibGUgdXNpbmcgc2VydmljZSB3b3JrZXJcbiAgICBmZXRjaChwYXRoKTsvL3N0YXJ0IGRvd25sb2FkIG9mIGFzc2V0c1xuICAgIHZhciBvUmVxID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgb1JlcS5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCAoKT0+e30pO1xuICAgIG9SZXEub3BlbihcIkdFVFwiLCBwYXRoKTtcbiAgICBvUmVxLnNlbmQoKTtcbiAgICAqL1xuICAgIGlmIChwYXRoLmVuZHNXaXRoKFwiLmdsYlwiKSkge1xuICAgICAgY29uc3QgbG9hZGVyID0gYXdhaXQgYXNzZXRzTG9hZGVyLmdldExvYWRlcihcIkdMVEZMb2FkZXJcIiwgYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCBtb2R1bGU6IGFueSA9IGF3YWl0IGltcG9ydChcbiAgICAgICAgICAvKiAgd2VicGFja1ByZWZldGNoOiAwLCAgd2VicGFja01vZGU6ICdsYXp5JywgIHdlYnBhY2tDaHVua05hbWU6IFwiQGFwdGVyby9heG9sb3Rpcy1jb3JlLXBsdWdpbnMvdGhyZWUvZXhhbXBsZXMvanNtL2xvYWRlcnMvR0xURkxvYWRlclwiICAqL1xuICAgICAgICAgIFwidGhyZWUvZXhhbXBsZXMvanNtL2xvYWRlcnMvR0xURkxvYWRlclwiXG4gICAgICAgICk7XG4gICAgICAgIGNvbnN0IGdsdGZMb2FkZXIgPSBuZXcgbW9kdWxlLkdMVEZMb2FkZXIoKTtcbiAgICAgICAgLy9jb25zdCBnbHRmTG9hZGVyID0gbmV3IEdMVEZMb2FkZXIobmV3IHRoaXMuVEhSRUUuTG9hZGluZ01hbmFnZXIoKSk7XG4gICAgICAgIHJldHVybiBnbHRmTG9hZGVyO1xuICAgICAgfSk7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBsb2FkZXIubG9hZEFzeW5jKHBhdGgpO1xuICAgICAgYXNzZXRzTG9hZGVyLmFzc2V0c1twYXRoXSA9IHJlc3VsdDtcbiAgICB9XG4gICAgaWYgKHBhdGguZW5kc1dpdGgoXCIuanBnXCIpKSB7XG4gICAgICBjb25zdCBsb2FkZXIgPSBhd2FpdCBhc3NldHNMb2FkZXIuZ2V0TG9hZGVyKFwiVGV4dHVyZUxvYWRlclwiLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHRleExvYWRlciA9IG5ldyB0aGlzLlRIUkVFLlRleHR1cmVMb2FkZXIoKTtcbiAgICAgICAgcmV0dXJuIHRleExvYWRlcjtcbiAgICAgIH0pO1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgbG9hZGVyLmxvYWRBc3luYyhwYXRoKTtcbiAgICAgIGFzc2V0c0xvYWRlci5hc3NldHNbcGF0aF0gPSByZXN1bHQ7XG4gICAgfVxuICAgIHJldHVybiBhc3NldHNMb2FkZXIuYXNzZXRzW3BhdGhdO1xuICB9XG5cbiAgZ2V0VHlwZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiBUaHJlZUxpYi5uYW1lO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBGYWN0b3J5IGltcGxlbWVudHMgV2VicGFja0xhenlNb2R1bGUsIFNlcnZpY2U8VGhyZWVMaWI+IHtcbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIGFzeW5jIGNyZWF0ZVNlcnZpY2Uoc2VydmljZXM6IExhenlTZXJ2aWNlcyk6IFByb21pc2U8VGhyZWVMaWI+IHtcbiAgICBsZXQgZnJhbWVMb29wID0gYXdhaXQgc2VydmljZXMuZ2V0U2VydmljZTxGcmFtZUxvb3A+KFxuICAgICAgXCJAYXB0ZXJvL2F4b2xvdGlzLXBsYXllci9tb2R1bGVzL0ZyYW1lTG9vcFwiXG4gICAgKTtcbiAgICBsZXQgd29ybGRTZXJ2aWNlID0gYXdhaXQgc2VydmljZXMuZ2V0U2VydmljZTxXb3JsZFNlcnZpY2U+KFxuICAgICAgXCJAYXB0ZXJvL2F4b2xvdGlzLXBsYXllci9tb2R1bGVzL2NvcmUvV29ybGRTZXJ2aWNlXCJcbiAgICApO1xuICAgIGNvbnN0IHRocmVlTGliID0gbmV3IFRocmVlTGliKFxuICAgICAgZnJhbWVMb29wLFxuICAgICAgd29ybGRTZXJ2aWNlLFxuICAgICAgYXdhaXQgYXN5bmNMb2FkVGhyZWUoKVxuICAgICk7XG4gICAgYXdhaXQgdGhyZWVMaWIuaW5pdCgpO1xuICAgIHJldHVybiB0aHJlZUxpYjtcbiAgfVxufVxuIl0sIm5hbWVzIjpbImFzc2V0c0xvYWRlciIsImFzeW5jTG9hZFRocmVlIiwiVEhSRUUiLCJnZXRHbG9iYWxSZW5kZXJlciIsIndpbmRvdyIsImF4b2xvdGlzIiwicmVuZGVyZXIiLCJXZWJHTFJlbmRlcmVyIiwiYW50aWFsaWFzIiwic2V0U2l6ZSIsImlubmVyV2lkdGgiLCJpbm5lckhlaWdodCIsInRvbmVNYXBwaW5nIiwiQUNFU0ZpbG1pY1RvbmVNYXBwaW5nIiwidG9uZU1hcHBpbmdFeHBvc3VyZSIsIm91dHB1dEVuY29kaW5nIiwic1JHQkVuY29kaW5nIiwic2V0UGl4ZWxSYXRpbyIsImRldmljZVBpeGVsUmF0aW8iLCJkb2N1bWVudCIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImRvbUVsZW1lbnQiLCJUaHJlZUxpYiIsImNvbnN0cnVjdG9yIiwiZnJhbWVMb29wIiwid29ybGRTZXJ2aWNlIiwiaW5pdCIsInNjZW5lIiwiU2NlbmUiLCJjYW1lcmEiLCJQZXJzcGVjdGl2ZUNhbWVyYSIsInBvc2l0aW9uIiwieiIsInJlbmRlciIsInByZXJlbmRlciIsInByZVJlbmRlclBhc3MiLCJhdXRvQ2xlYXIiLCJvbldpbmRvd1Jlc2l6ZSIsImFzcGVjdCIsInVwZGF0ZVByb2plY3Rpb25NYXRyaXgiLCJhZGRPbldvcmxkQ2hhbmdlQ2FsbGJhY2siLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicmVtb3ZlTG9vcCIsIm5hbWUiLCJpc0FjdGl2ZVdvcmxkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImFkZExvb3AiLCJsb2FkQXNzZXRzIiwicGF0aCIsImFzc2V0cyIsImVuZHNXaXRoIiwibG9hZGVyIiwiZ2V0TG9hZGVyIiwibW9kdWxlIiwiZ2x0ZkxvYWRlciIsIkdMVEZMb2FkZXIiLCJyZXN1bHQiLCJsb2FkQXN5bmMiLCJ0ZXhMb2FkZXIiLCJUZXh0dXJlTG9hZGVyIiwiZ2V0VHlwZSIsIkZhY3RvcnkiLCJjcmVhdGVTZXJ2aWNlIiwic2VydmljZXMiLCJnZXRTZXJ2aWNlIiwidGhyZWVMaWIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/lib/modules/three/ThreeLib.ts\n')}}]);