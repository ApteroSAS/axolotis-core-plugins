{"version":3,"file":"@aptero/axolotis-core-plugins/sky/Sky.0741b0e27189b5cc7b23.js","mappings":";;;;;;;;;;;0VAUO,MAAMA,EACU,sBAACC,EAAoBC,GACxC,IAAIC,EAAWF,EAAMG,wBACnBC,EAAAA,cAAAA,MAEEC,QAAcH,EAASI,WACzB,gDAEEC,EAAM,IAAIC,EAEd,aADMD,EAAIE,WAAWJ,EAAOJ,EAAOS,QAC5BH,GAII,MAAMC,EAGnBG,cAAc,gDAEdC,UACE,MAAO,MAGO,iBAACP,EAAiBK,GAChCG,KAAKC,MAAQT,EAAMS,MACnBD,KAAKE,cAAgBV,EAAMW,WAAWN,GACtC,MAAMO,EAAY,IAAIC,EAAAA,gBAAsB,SAAU,UAAW,GACjED,EAAUE,MAAMC,OAAO,GAAK,EAAG,IAC/BH,EAAUI,YAAYD,OAAO,KAAO,EAAG,KACvCP,KAAKC,MAAMQ,IAAIL,GAEf,MAAMM,EAAS,IAAIL,EAAAA,eAAqB,IAAM,GAAI,IAC5CM,EAAS,IAAIN,EAAAA,kBAAwB,CACzCO,IAAKZ,KAAKE,QACVW,KAAMR,EAAAA,SACNS,YAAY,EACZC,YAAY,IAERrB,EAAM,IAAIW,EAAAA,KAAWK,EAAQC,GACnCjB,EAAIsB,QAAQX,EAAAA,UAAAA,UAA0B,KACtCL,KAAKC,MAAMQ,IAAIf","sources":["webpack://axolotis-core-plugins/./src/lib/modules/sky/Sky.ts"],"sourcesContent":["import * as THREE from \"three\";\n\nimport { ServiceEntity } from \"@aptero/axolotis-player\";\nimport Component from \"@aptero/axolotis-player/build/types/modules/core/ecs/Component\";\nimport { ComponentFactory } from \"@aptero/axolotis-player/build/types/modules/core/ecs/ComponentFactory\";\nimport { WorldEntity } from \"@aptero/axolotis-player/build/types/modules/core/ecs/WorldEntity\";\n\nimport { ThreeLib } from \"@root/lib/modules/three/ThreeLib\";\nimport { WebpackLazyModule } from \"@root/lib/generated/webpack/WebpackLoader\";\n\nexport class Factory implements WebpackLazyModule, ComponentFactory<Sky> {\n  async createComponent(world: WorldEntity, config: any): Promise<Sky> {\n    let services = world.getFirstComponentByType<ServiceEntity>(\n      ServiceEntity.name\n    );\n    let three = await services.getService<ThreeLib>(\n      \"@aptero/axolotis-core-plugins/three/ThreeLib\"\n    );\n    let sky = new Sky();\n    await sky.initialize(three, config.skymap); //\"assets/static/demo2/sky.jpg\"\n    return sky;\n  }\n}\n\nexport default class Sky implements Component {\n  private scene: any;\n  private texture: any;\n  constructor() {}\n\n  getType(): string {\n    return \"Sky\";\n  }\n\n  async initialize(three: ThreeLib, skymap: string) {\n    this.scene = three.scene;\n    this.texture = await three.loadAssets(skymap);\n    const hemiLight = new THREE.HemisphereLight(0xffffff, 0xfffffff, 1);\n    hemiLight.color.setHSL(0.6, 1, 0.6);\n    hemiLight.groundColor.setHSL(0.095, 1, 0.75);\n    this.scene.add(hemiLight);\n\n    const skyGeo = new THREE.SphereGeometry(1000, 25, 25);\n    const skyMat = new THREE.MeshBasicMaterial({\n      map: this.texture,\n      side: THREE.BackSide,\n      depthWrite: false,\n      toneMapped: false,\n    });\n    const sky = new THREE.Mesh(skyGeo, skyMat);\n    sky.rotateY(THREE.MathUtils.degToRad(-60));\n    this.scene.add(sky);\n  }\n}\n"],"names":["Factory","world","config","services","getFirstComponentByType","ServiceEntity","three","getService","sky","Sky","initialize","skymap","constructor","getType","this","scene","texture","loadAssets","hemiLight","THREE","color","setHSL","groundColor","add","skyGeo","skyMat","map","side","depthWrite","toneMapped","rotateY"],"sourceRoot":""}